/*<simulation_settings>
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off BlackJack -c GameController --vector_source="C:/Users/agodinho/Documents/LabDig/BlackJackParaFPGA/TopLevelTests.vwf" --testbench_file="C:/Users/agodinho/Documents/LabDig/BlackJackParaFPGA/simulation/qsim/TopLevelTests.vwf.vht"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off BlackJack -c GameController --vector_source="C:/Users/agodinho/Documents/LabDig/BlackJackParaFPGA/TopLevelTests.vwf" --testbench_file="C:/Users/agodinho/Documents/LabDig/BlackJackParaFPGA/simulation/qsim/TopLevelTests.vwf.vht"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="C:/Users/agodinho/Documents/LabDig/BlackJackParaFPGA/simulation/qsim/" BlackJack -c GameController</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=vhdl --output_directory="C:/Users/agodinho/Documents/LabDig/BlackJackParaFPGA/simulation/qsim/" BlackJack -c GameController</tnetlist_cmd>
<modelsim_script>onerror {exit -code 1}
vlib work
vcom -work work GameController.vho
vcom -work work TopLevelTests.vwf.vht
vsim -novopt -c -t 1ps -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.TopLevelEntity_vhd_vec_tst
vcd file -direction BlackJack.msim.vcd
vcd add -internal TopLevelEntity_vhd_vec_tst/*
vcd add -internal TopLevelEntity_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f


</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vcom -work work GameController.vho
vcom -work work TopLevelTests.vwf.vht
vsim -novopt -c -t 1ps -sdfmax TopLevelEntity_vhd_vec_tst/i1=GameController_vhd.sdo -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.TopLevelEntity_vhd_vec_tst
vcd file -direction BlackJack.msim.vcd
vcd add -internal TopLevelEntity_vhd_vec_tst/*
vcd add -internal TopLevelEntity_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f


</modelsim_script_timing>
<hdl_lang>vhdl</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2016  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel MegaCore Function License Agreement, or other 
applicable license agreement, including, without limitation, 
that your use is for the sole purpose of programming logic 
devices manufactured by Intel and sold by Intel or its 
authorized distributors.  Please refer to the applicable 
agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("debugUartDadoRecepcao")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugUartDadoRecepcao[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugUartDadoRecepcao";
}

SIGNAL("debugUartDadoRecepcao[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugUartDadoRecepcao";
}

SIGNAL("debugUartDadoRecepcao[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugUartDadoRecepcao";
}

SIGNAL("debugUartDadoRecepcao[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugUartDadoRecepcao";
}

SIGNAL("debugUartDadoRecepcao[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugUartDadoRecepcao";
}

SIGNAL("debugUartDadoRecepcao[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugUartDadoRecepcao";
}

SIGNAL("debugUartDadoRecepcao[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugUartDadoRecepcao";
}

SIGNAL("debugUartDadoRecepcao[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugUartDadoRecepcao";
}

SIGNAL("entradaSerial")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("saidaSerial")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugClockInternoRecepcao")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugDealCardsToPlayer0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugDealCardsToPlayer1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugNextRound")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugPlayer0CardsSum")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugPlayer0CardsSum[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer0CardsSum[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer0CardsSum";
}

SIGNAL("debugPlayer1CardsSum")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 14;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugPlayer1CardsSum[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugPlayer1CardsSum[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugPlayer1CardsSum";
}

SIGNAL("debugSaidaPrinter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugSaidaPrinter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugSaidaPrinter";
}

SIGNAL("debugSaidaPrinter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugSaidaPrinter";
}

SIGNAL("debugSaidaPrinter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugSaidaPrinter";
}

SIGNAL("debugSaidaPrinter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugSaidaPrinter";
}

SIGNAL("debugSaidaPrinter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugSaidaPrinter";
}

SIGNAL("debugSaidaPrinter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugSaidaPrinter";
}

SIGNAL("debugSaidaPrinter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugSaidaPrinter";
}

SIGNAL("debugContagem")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugContagem[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugContagem";
}

SIGNAL("debugContagem[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugContagem";
}

SIGNAL("debugContagem[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugContagem";
}

SIGNAL("debugContagem[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugContagem";
}

SIGNAL("debugEstado")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugEstado[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugEstado";
}

SIGNAL("debugEstado[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugEstado";
}

SIGNAL("debugEstado[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugEstado";
}

SIGNAL("debugTransmissaoEmAndamento")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugTransmiteDado")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugClockInternoTransmissao")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugEstadoTransUC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugEstadoTransUC[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugEstadoTransUC";
}

SIGNAL("debugEstadoTransUC[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugEstadoTransUC";
}

SIGNAL("debugRegistradorTransmissao")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 12;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("debugRegistradorTransmissao[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

SIGNAL("debugRegistradorTransmissao[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "debugRegistradorTransmissao";
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1600;
			LEVEL 0 FOR 0.625;
			LEVEL 1 FOR 0.625;
		}
	}
}

TRANSITION_LIST("debugUartDadoRecepcao[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugUartDadoRecepcao[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugUartDadoRecepcao[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugUartDadoRecepcao[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugUartDadoRecepcao[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugUartDadoRecepcao[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugUartDadoRecepcao[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugUartDadoRecepcao[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("entradaSerial")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1540.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 1980.0;
	}
}

TRANSITION_LIST("saidaSerial")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugClockInternoRecepcao")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugDealCardsToPlayer0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugDealCardsToPlayer1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugNextRound")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer0CardsSum[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugPlayer1CardsSum[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugSaidaPrinter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugSaidaPrinter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugSaidaPrinter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugSaidaPrinter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugSaidaPrinter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugSaidaPrinter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugSaidaPrinter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugContagem[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugContagem[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugContagem[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugContagem[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugEstado[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugEstado[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugEstado[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugTransmissaoEmAndamento")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugTransmiteDado")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugClockInternoTransmissao")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugEstadoTransUC[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugEstadoTransUC[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

TRANSITION_LIST("debugRegistradorTransmissao[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "entradaSerial";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debugUartDadoRecepcao";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "debugUartDadoRecepcao[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "debugUartDadoRecepcao[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "debugUartDadoRecepcao[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "debugUartDadoRecepcao[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "debugUartDadoRecepcao[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "debugUartDadoRecepcao[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "debugUartDadoRecepcao[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "debugUartDadoRecepcao[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "saidaSerial";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debugClockInternoRecepcao";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debugDealCardsToPlayer0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debugDealCardsToPlayer1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debugNextRound";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer0CardsSum[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 17;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
	CHILDREN = 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugPlayer1CardsSum[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "debugSaidaPrinter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49, 50, 51, 52, 53, 54;
}

DISPLAY_LINE
{
	CHANNEL = "debugSaidaPrinter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debugSaidaPrinter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debugSaidaPrinter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debugSaidaPrinter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debugSaidaPrinter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debugSaidaPrinter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debugSaidaPrinter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "debugContagem";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 0;
	CHILDREN = 56, 57, 58, 59;
}

DISPLAY_LINE
{
	CHANNEL = "debugContagem[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "debugContagem[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "debugContagem[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "debugContagem[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 55;
}

DISPLAY_LINE
{
	CHANNEL = "debugEstado";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
	CHILDREN = 61, 62, 63;
}

DISPLAY_LINE
{
	CHANNEL = "debugEstado[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "debugEstado[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "debugEstado[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "debugTransmissaoEmAndamento";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debugTransmiteDado";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debugClockInternoTransmissao";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "debugEstadoTransUC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
	CHILDREN = 68, 69;
}

DISPLAY_LINE
{
	CHANNEL = "debugEstadoTransUC[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "debugEstadoTransUC[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 67;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 70;
	TREE_LEVEL = 0;
	CHILDREN = 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 70;
}

DISPLAY_LINE
{
	CHANNEL = "debugRegistradorTransmissao[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 70;
}

TIME_BAR
{
	TIME = 460000;
	MASTER = TRUE;
}
;
