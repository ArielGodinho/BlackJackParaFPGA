/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dado_serial")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("clockInterno")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("subClockRunning")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("count[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("count[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("count[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("count[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "count";
}

SIGNAL("dado_paralelo")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("dado_paralelo[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dado_paralelo";
}

SIGNAL("dado_paralelo[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dado_paralelo";
}

SIGNAL("dado_paralelo[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dado_paralelo";
}

SIGNAL("dado_paralelo[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dado_paralelo";
}

SIGNAL("dado_paralelo[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dado_paralelo";
}

SIGNAL("dado_paralelo[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dado_paralelo";
}

SIGNAL("dado_paralelo[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dado_paralelo";
}

SIGNAL("dado_paralelo[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "dado_paralelo";
}

SIGNAL("saidas_estado")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("saidas_estado[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saidas_estado";
}

SIGNAL("saidas_estado[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saidas_estado";
}

SIGNAL("saidas_estado[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saidas_estado";
}

SIGNAL("saidas_estado[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "saidas_estado";
}

SIGNAL("paridade")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("hexa0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("dado_serial")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 104.16;
		LEVEL 0 FOR 52.08;
		LEVEL 1 FOR 52.08;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 52.08;
			LEVEL 1 FOR 52.08;
		}
		LEVEL 0 FOR 52.08;
		LEVEL 1 FOR 260.4;
		LEVEL 0 FOR 52.08;
		LEVEL 1 FOR 52.08;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 52.08;
			LEVEL 1 FOR 52.08;
		}
		LEVEL 0 FOR 52.08;
		LEVEL 1 FOR 10.48;
	}
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50000;
			LEVEL 0 FOR 0.01;
			LEVEL 1 FOR 0.01;
		}
	}
}

TRANSITION_LIST("clockInterno")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.23;
		NODE
		{
			REPEAT = 10;
			LEVEL 1 FOR 0.02;
			LEVEL 0 FOR 52.08;
		}
		LEVEL 1 FOR 0.02;
		LEVEL 0 FOR 103.94;
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 0.02;
			LEVEL 0 FOR 52.08;
		}
		LEVEL 1 FOR 0.02;
		LEVEL 0 FOR 36.39;
	}
}

TRANSITION_LIST("subClockRunning")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.23;
		LEVEL 1 FOR 521.02;
		LEVEL 0 FOR 103.94;
		LEVEL 1 FOR 244.81;
	}
}

TRANSITION_LIST("count[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.23;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 0.02;
		LEVEL 0 FOR 103.94;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 36.41;
	}
}

TRANSITION_LIST("count[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 182.33;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 104.2;
			LEVEL 0 FOR 104.2;
		}
		LEVEL 1 FOR 52.12;
		LEVEL 0 FOR 156.04;
		LEVEL 1 FOR 104.2;
		LEVEL 0 FOR 88.51;
	}
}

TRANSITION_LIST("count[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 286.53;
		LEVEL 1 FOR 208.4;
		LEVEL 0 FOR 416.56;
		LEVEL 1 FOR 88.51;
	}
}

TRANSITION_LIST("count[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 494.93;
		LEVEL 1 FOR 156.32;
		LEVEL 0 FOR 348.75;
	}
}

TRANSITION_LIST("dado_paralelo[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 547.03;
		LEVEL 1 FOR 182.1;
		LEVEL 0 FOR 270.87;
	}
}

TRANSITION_LIST("dado_paralelo[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 494.93;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 452.97;
	}
}

TRANSITION_LIST("dado_paralelo[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 442.83;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 52.1;
		LEVEL 1 FOR 182.1;
		LEVEL 0 FOR 270.87;
	}
}

TRANSITION_LIST("dado_paralelo[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 390.73;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 52.1;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 452.97;
	}
}

TRANSITION_LIST("dado_paralelo[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 338.63;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 182.1;
		LEVEL 0 FOR 234.46;
		LEVEL 1 FOR 36.41;
	}
}

TRANSITION_LIST("dado_paralelo[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 286.53;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 364.46;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 36.41;
	}
}

TRANSITION_LIST("dado_paralelo[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 234.43;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 182.1;
		LEVEL 0 FOR 130.26;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 52.1;
		LEVEL 1 FOR 36.41;
	}
}

TRANSITION_LIST("dado_paralelo[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 182.33;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 234.2;
		LEVEL 0 FOR 78.16;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 52.1;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 36.41;
	}
}

TRANSITION_LIST("saidas_estado[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 104.17;
		LEVEL 0 FOR 547.08;
		LEVEL 1 FOR 77.88;
		LEVEL 0 FOR 270.87;
	}
}

TRANSITION_LIST("saidas_estado[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 104.17;
		LEVEL 0 FOR 547.08;
		LEVEL 1 FOR 77.88;
		LEVEL 0 FOR 270.87;
	}
}

TRANSITION_LIST("saidas_estado[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 104.17;
		LEVEL 1 FOR 26.08;
		LEVEL 0 FOR 598.88;
		LEVEL 1 FOR 26.08;
		LEVEL 0 FOR 244.79;
	}
}

TRANSITION_LIST("saidas_estado[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 130.25;
		LEVEL 1 FOR 416.8;
		LEVEL 0 FOR 208.16;
		LEVEL 1 FOR 244.79;
	}
}

TRANSITION_LIST("paridade")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 182.33;
		LEVEL 0 FOR 104.2;
		LEVEL 1 FOR 104.2;
		LEVEL 0 FOR 104.2;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 182.1;
		LEVEL 1 FOR 78.16;
		LEVEL 0 FOR 104.2;
		LEVEL 1 FOR 88.51;
	}
}

TRANSITION_LIST("hexa1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 234.43;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 572.86;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 88.51;
	}
}

TRANSITION_LIST("hexa1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 338.63;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 182.1;
		LEVEL 0 FOR 234.46;
		LEVEL 1 FOR 36.41;
	}
}

TRANSITION_LIST("hexa1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 286.53;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 364.46;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 36.41;
	}
}

TRANSITION_LIST("hexa1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 234.43;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 572.86;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 88.51;
	}
}

TRANSITION_LIST("hexa1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 234.43;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 182.1;
		LEVEL 0 FOR 130.26;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 52.1;
		LEVEL 1 FOR 36.41;
	}
}

TRANSITION_LIST("hexa1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 286.53;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 52.1;
			LEVEL 0 FOR 52.1;
		}
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 364.46;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 36.41;
	}
}

TRANSITION_LIST("hexa1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 234.43;
		LEVEL 0 FOR 494.7;
		LEVEL 1 FOR 130.26;
		LEVEL 0 FOR 140.61;
	}
}

TRANSITION_LIST("hexa0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 442.83;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 505.07;
	}
}

TRANSITION_LIST("hexa0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 547.03;
		LEVEL 1 FOR 182.1;
		LEVEL 0 FOR 270.87;
	}
}

TRANSITION_LIST("hexa0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("hexa0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 442.83;
		LEVEL 1 FOR 104.2;
		LEVEL 0 FOR 452.97;
	}
}

TRANSITION_LIST("hexa0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 442.83;
		LEVEL 1 FOR 52.1;
		LEVEL 0 FOR 52.1;
		LEVEL 1 FOR 182.1;
		LEVEL 0 FOR 270.87;
	}
}

TRANSITION_LIST("hexa0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("hexa0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 390.73;
		LEVEL 0 FOR 338.4;
		LEVEL 1 FOR 270.87;
	}
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dado_serial";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clockInterno";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "subClockRunning";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "count";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "count[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "count[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "count[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "count[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "dado_paralelo";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
	CHILDREN = 11, 12, 13, 14, 15, 16, 17, 18;
}

DISPLAY_LINE
{
	CHANNEL = "dado_paralelo[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dado_paralelo[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dado_paralelo[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dado_paralelo[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dado_paralelo[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dado_paralelo[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dado_paralelo[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "dado_paralelo[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 10;
}

DISPLAY_LINE
{
	CHANNEL = "saidas_estado";
	EXPAND_STATUS = EXPANDED;
	RADIX = ASCII;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
	CHILDREN = 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "saidas_estado[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "saidas_estado[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "saidas_estado[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "saidas_estado[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 19;
}

DISPLAY_LINE
{
	CHANNEL = "paridade";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa1[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa1[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa1[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa1[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa1[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa1[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa1[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "hexa0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 31800;
	MASTER = TRUE;
}
;
